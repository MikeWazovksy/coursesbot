from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
)
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters.callback_data import CallbackData

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üéì –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã")],
        [
            KeyboardButton(text="üìö –ú–æ–∏ –∫—É—Ä—Å—ã"),
            KeyboardButton(text="üßæ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫"),
        ],
    ],
    resize_keyboard=True,
)


# –ö–æ–ª–±—ç–∫–∏ –∫—É—Ä—Å–æ–≤
class CourseCallbackFactory(CallbackData, prefix="course"):
    action: str
    course_id: int


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∫—É—Ä—Å–æ–≤
def get_courses_list_kb(courses: list):
    builder = InlineKeyboardBuilder()
    for course_id, title, _, _, price, _ in courses:
        builder.button(
            text=f"{title} - {price} —Ä—É–±.",
            callback_data=CourseCallbackFactory(action="view", course_id=course_id),
        )
    builder.adjust(1)
    return builder.as_markup()


def get_course_details_kb(course_id: int):
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üí≥ –ö—É–ø–∏—Ç—å –∫—É—Ä—Å",
        callback_data=CourseCallbackFactory(action="buy", course_id=course_id),
    )
    builder.button(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
        callback_data=CourseCallbackFactory(
            action="back_to_list", course_id=-1
        ),
    )
    builder.adjust(1)
    return builder.as_markup()
